<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>biblioteca-client</artifactId>

	<name>biblioteca-client</name>

	<parent>
		<groupId>com.axians</groupId>
		<artifactId>biblioteca-virtual</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<properties>
		<java.version>1.8</java.version>
		<frontend-maven-plugin.version>1.6</frontend-maven-plugin.version>
		<deploy.mode>env</deploy.mode>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>${frontend-maven-plugin.version}</version>
				<executions>
					<!-- Install our node and npm version to run npm/node scripts-->
					<execution>
						<id>install node and npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<configuration>
							<nodeVersion>v10.10.0</nodeVersion>
						</configuration>
					</execution>
					<!-- Install all project dependencies -->
					<execution>
						<id>npm install</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<!-- optional: default phase is "generate-resources" -->
						<phase>generate-resources</phase>
						<!-- Optional configuration which provides for running any npm command -->
						<configuration>
							<arguments>--allow-root install</arguments>
						</configuration>
					</execution>
					<!-- Build and minify static files -->
					<execution>
						<id>npm run build</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<!-- Alternate modes between the .env files, 
								the mode should point to a .env file in the root directory, 
								if any then production is selected as default.
								Set the parameter when building 
								e.g. mvn clean install -Ddeploy.mode=(qas, prod)-->
							<arguments>run build -- --mode ${deploy.mode}</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
